/* build/FLA_config.h.in.  Generated from configure.ac by autoheader.  */

/* Define to dummy `main' function (if any) required to link to the Fortran
   libraries. */
#undef F77_DUMMY_MAIN

/* Define to a macro mangling the given C identifier (in lower and upper
   case), which must not contain underscores, for linking with Fortran. */
#undef F77_FUNC

/* As F77_FUNC, but for C identifiers containing underscores. */
#undef F77_FUNC_

/* Define if F77 and FC dummy `main' functions are identical. */
#undef FC_DUMMY_MAIN_EQ_F77

/* Sets the default blocksize in the k dimension. */
#undef FLA_DEFAULT_K_BLOCKSIZE

/* Sets the default blocksize in the m dimension. */
#undef FLA_DEFAULT_M_BLOCKSIZE

/* Sets the default blocksize in the n dimension. */
#undef FLA_DEFAULT_N_BLOCKSIZE

/* Determines whether to use control trees to select a reasonable FLAME
   variant and blocksize when level-3 BLAS front-ends are invoked. */
#undef FLA_ENABLE_BLAS3_FRONT_END_CNTL_TREES

/* Determines whether to define bl1_malloc() in terms of FLA_malloc(). */
#undef FLA_ENABLE_BLIS1_USE_OF_FLA_MALLOC

/* Determines whether a built-in implementation of the BLAS is compiled. */
#undef FLA_ENABLE_BUILTIN_BLAS

/* Determines whether to enable CBLAS interfaces instead of Fortran-77
   interfaces to the BLAS. */
#undef FLA_ENABLE_CBLAS_INTERFACES

/* Determines whether to enable external LAPACK for small subproblems. */
#undef FLA_ENABLE_EXTERNAL_LAPACK_FOR_SUBPROBLEMS

/* Determines whether to enable interfaces to external LAPACK routines. */
#undef FLA_ENABLE_EXTERNAL_LAPACK_INTERFACES

/* Determines whether to enable interfaces to internal/low-level libgoto
   symbols. */
#undef FLA_ENABLE_GOTO_INTERFACES

/* Determines whether GPU-specific blocks of code should be compiled. */
#undef FLA_ENABLE_GPU

/* Determines whether HIP-specific blocks of code should be compiled. */
#undef FLA_ENABLE_HIP

/* Determines whether to enable internal runtime consistency checks of
   function parameters and return values. */
#undef FLA_ENABLE_INTERNAL_ERROR_CHECKING

/* Determines whether the LAPACK compatibility layer is included in libflame.
   */
#undef FLA_ENABLE_LAPACK2FLAME

/* Determines whether the LAPACK FLASH compatibility layer is included in
   libflame. */
#undef FLA_ENABLE_LAPACK2FLASH

/* Determines whether to enable code that will increase FLA_Obj leading
   dimensions to ensure that matrix columns adhere to the alignment specified
   by FLA_MEMORY_ALIGNMENT_BOUNDARY. */
#undef FLA_ENABLE_LDIM_ALIGNMENT

/* Determines whether to use the legacy f2c files or the newer fortran version
   of lapack with lapack2flame or lapack2flash. */
#undef FLA_ENABLE_LEGACY_LAPACK

/* Determines whether memory is aligned to user-requested boundaries. */
#undef FLA_ENABLE_MEMORY_ALIGNMENT

/* Determines whether to enable the FLA_malloc()/FLA_free() memory counter by
   default. */
#undef FLA_ENABLE_MEMORY_LEAK_COUNTER

/* Determines whether thread-specific blocks of code should be compiled. */
#undef FLA_ENABLE_MULTITHREADING

/* Determines whether to enable various segments of code identified as
   providing non-critical functionality. */
#undef FLA_ENABLE_NON_CRITICAL_CODE

/* Determines whether to define a portable FLA_Clock() in terms of
   clock_gettime() or gettimeofday() from time.h. */
#undef FLA_ENABLE_PORTABLE_TIMER

/* Determines whether SCC-specific blocks of code should be compiled. */
#undef FLA_ENABLE_SCC

/* Determines whether SuperMatrix-specific blocks of code should be compiled.
   */
#undef FLA_ENABLE_SUPERMATRIX

/* Determines whether blocks of code specific to Texas Instruments' DSP. */
#undef FLA_ENABLE_TIDSP

/* Determines whether vector intrinsics are used in certain low-level
   functions. */
#undef FLA_ENABLE_VECTOR_INTRINSICS

/* Determines whether to modify various segments of code needed for
   integrating libflame into Windows. */
#undef FLA_ENABLE_WINDOWS_BUILD

/* Encodes the default level of internal error checking chosen at
   configure-time. */
#undef FLA_INTERNAL_ERROR_CHECKING_LEVEL

/* Sets the byte boundary used to align the starting address of all memory
   allocated dynamically through libflame. */
#undef FLA_MEMORY_ALIGNMENT_BOUNDARY

/* Encodes the type of multithreading chosen at configure-time. */
#undef FLA_MULTITHREADING_MODEL

/* Determines whether clock_gettime() was present on the system (via time.h).
   */
#undef FLA_PORTABLE_TIMER_IS_CLOCK_GETTIME

/* Determines whether gettimeofday() was present on the system (via time.h).
   */
#undef FLA_PORTABLE_TIMER_IS_GETTIMEOFDAY

/* Determines whether a timer was found at all. */
#undef FLA_PORTABLE_TIMER_IS_UNKNOWN

/* Encodes the type of vector intrinsics requested at configure-time. */
#undef FLA_VECTOR_INTRINSIC_TYPE

/* Define to 1 if you have the <assert.h> header file. */
#undef HAVE_ASSERT_H

/* Define to 1 if you have the <fcntl.h> header file. */
#undef HAVE_FCNTL_H

/* Define to 1 if you have the <ia64intrin.h> header file. */
#undef HAVE_IA64INTRIN_H

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the `m' library (-lm). */
#undef HAVE_LIBM

/* Define to 1 if you have the <math.h> header file. */
#undef HAVE_MATH_H

/* Define to 1 if you have the <signal.h> header file. */
#undef HAVE_SIGNAL_H

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdio.h> header file. */
#undef HAVE_STDIO_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/time.h> header file. */
#undef HAVE_SYS_TIME_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
#undef NO_MINUS_C_MINUS_O

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to 1 if the C compiler supports function prototypes. */
#undef PROTOTYPES

/* Define to 1 if all of the C90 standard headers exist (not just the ones
   required in a freestanding environment). This macro is provided for
   backward compatibility; new code need not use it. */
#undef STDC_HEADERS

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. This
   macro is obsolete. */
#undef TIME_WITH_SYS_TIME

/* Enables ANSI C, POSIX.1, POSIX.2, BSD, SVID, X/Open, and GNU extensions to
   the C language. */
#undef _GNU_SOURCE

/* Define like PROTOTYPES; this can be used by system headers. */
#undef __PROTOTYPES

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to `unsigned int' if <sys/types.h> does not define. */
#undef size_t
